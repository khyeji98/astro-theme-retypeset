---
import type { CollectionEntry } from 'astro:content'
import PinIcon from '@/assets/icons/pin-icon.svg'
import PostDate from '@/components/PostDate.astro'
import { getPostPath } from '@/i18n/path'
import { getPostDescription } from '@/utils/description'
import { isHomePage } from '@/utils/page'

type Post = CollectionEntry<'posts'> & {
  remarkPluginFrontmatter: {
    minutes: number
  }
}

const { posts, lang, pinned = false } = Astro.props
const isHome = isHomePage(Astro.url.pathname)

export interface Props {
  posts: Post[]
  lang: string
  pinned?: boolean
}

/** 본문에서 첫 이미지 URL 추출 (마크다운 & img 태그 모두 지원) */
function extractFirstImage(markdown: string | undefined): string | null {
  if (!markdown) return null

  // 1) ![alt](url "title") 형태
  const md = markdown.match(/!\[[^\]]*\]\((?<url>[^)\s]+)(?:\s+"[^"]*")?\)/)
  if (md?.groups?.url) return md.groups.url

  // 2) <img src="..."> 형태
  const html = markdown.match(/<img[^>]+src=["']([^"']+)["'][^>]*>/i)
  if (html?.[1]) return html[1]

  return null
}

---

<ul>
  {posts.map((post) => {
    const slug = post.data.abbrlink || post.id
    const href = getPostPath(slug, lang)

    const bodyText: string | undefined = (post as any).body
    const autoThumb = extractFirstImage(bodyText)
    const thumb = post.data.thumbnail || autoThumb


    return (
      <li
        class="mb-5.5 flex items-start gap-3 lg:(mb-10 gap-4)"
        lg={isHome ? 'mb-10' : ''}
      >
        {/* 왼쪽: title / meta / desc */}
        <div class="min-w-0 flex-1">
          {/* post title */}
          <h3 class="inline transition-colors hover:c-primary">
            <a
              class="font-semibold cjk:tracking-0.02em"
              lg={isHome ? 'font-semibold text-4.5' : 'font-semibold'}
              href={href}
              transition:name={`post-${slug}${lang ? `-${lang}` : ''}`}
              data-disable-theme-transition
            >
              {post.data.title}
            </a>
            {pinned && (
              <PinIcon
                aria-hidden="true"
                class="ml-0.25em inline-block aspect-square w-0.98em translate-y--0.1em lg:(w-1.05em translate-y--0.15em)"
                fill="currentColor"
              />
            )}
          </h3>

          {/* desktop post description */}
          {isHome && (
            <div class="heti mt-2 hidden lg:block">
              <p>{getPostDescription(post, 'list')}</p>
            </div>
          )}

          {/* mobile post time */}
          <div
            class="mt-1 py-0.8 text-3.5 font-time lg:hidden"
            transition:name={`time-${slug}${lang ? `-${lang}` : ''}`}
            data-disable-theme-transition
          >
            <PostDate
              date={post.data.published}
              minutes={post.remarkPluginFrontmatter?.minutes}
            />
          </div>

          {/* desktop post time */}
          <div class="hidden text-3.65 font-time lg:(mt-1 inline-block)">
            <PostDate
              date={post.data.published}
              minutes={post.remarkPluginFrontmatter?.minutes}
            />
          </div>
        </div>

        {/* 오른쪽: 썸네일 (optional) */}
        {thumb && (
          <a href={href} class="block shrink-0 overflow-hidden rounded-1 bg-[var(--card)]">
            <img
              src={thumb}
              alt={post.data.title}
              loading="lazy"
              decoding="async"
              class="h-24 w-32 object-cover transition-transform duration-300 lg:(h-32 w-48) hover:scale-102"
              onerror="this.src='https://placehold.co/600x400?text=No+Image'; this.onerror=null;"
            />
          </a>
        )}
      </li>
    )
  })}
</ul>
